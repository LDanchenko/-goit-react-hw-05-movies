{"version":3,"file":"static/js/movie-cast-info.2ebd0a34.chunk.js","mappings":"+NAiCA,EA7Ba,WACX,IAAMA,GAAOC,EAAAA,EAAAA,MAAPD,GAEN,GAAmCE,EAAAA,EAAAA,UAAS,mBAAmB,kBAC7DC,EAAAA,EAAAA,IAAgBH,MADVI,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,KAI1B,OAAID,GAAc,mDAA2BA,EAAME,QAAjC,OACbH,OAAL,GAEI,wBACGE,EAAKE,KAAI,SAAAC,GAAI,OACZ,0BACGA,EAAKC,eACJ,gBACEC,MAAM,QACNC,IAAG,0CAAqCH,EAAKC,cAC7CG,IAAKJ,EAAKK,QAGd,yBAAIL,EAAKK,KAAT,QACA,uCAAeL,EAAKM,UAApB,SATON,EAAKT,W,0MCdlBgB,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAW,mCAAG,sGAGRD,IAAAA,IAAU,oBAAqB,CACvCE,OAAQ,CACNC,QAASJ,KALK,uBAECV,EAFD,EAEhBA,KAAQe,QAFQ,kBAQXf,GARW,2CAAH,qDAWXgB,EAAe,mCAAG,WAAMtB,GAAN,yFACCiB,IAAAA,IAAA,iBAAoBjB,GAAM,CAC/CmB,OAAQ,CACNC,QAASJ,EACTO,SAAU,WAJQ,uBACdjB,EADc,EACdA,KADc,kBAOfA,GAPe,2CAAH,sDAUfH,EAAe,mCAAG,WAAMH,GAAN,yFACCiB,IAAAA,IAAA,iBAAoBjB,EAApB,YAAkC,CACvDmB,OAAQ,CACNC,QAASJ,EACTO,SAAU,WAJQ,uBACdjB,EADc,EACdA,KADc,kBAOfA,EAAKkB,MAPU,2CAAH,sDAUfC,EAAe,mCAAG,WAAMzB,GAAN,yFACCiB,IAAAA,IAAA,iBAAoBjB,EAApB,YAAkC,CACvDmB,OAAQ,CACNC,QAASJ,EACTO,SAAU,QACVG,KAAM,KALY,uBACdpB,EADc,EACdA,KADc,kBAQfA,EAAKe,SARU,2CAAH,sDAUfM,EAAQ,mCAAG,WAAMC,GAAN,yFACQX,IAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNC,QAASJ,EACTO,SAAU,QACVG,KAAM,EACNG,eAAe,EACfD,MAAAA,KAPW,uBACPtB,EADO,EACPA,KADO,kBAURA,EAAKe,SAVG,2CAAH","sources":["components/Cast/Cast.jsx","services/movie-api.js"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../services/movie-api';\n\nconst Cast = () => {\n  let { id } = useParams();\n\n  const { isLoading, error, data } = useQuery('getMovieCredits', () =>\n    getMovieCredits(id)\n  );\n\n  if (error) return <h2>An error has occurred {error.message} </h2>;\n  if (!isLoading) {\n    return (\n      <ul>\n        {data.map(item => (\n          <li key={item.id}>\n            {item.profile_path && (\n              <img\n                width=\"100px\"\n                src={`https://image.tmdb.org/t/p/w500/${item.profile_path}`}\n                alt={item.name}\n              />\n            )}\n            <p>{item.name} </p>\n            <p>Character: {item.character} </p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default Cast ;\n","import axios from 'axios';\n\nconst API_KEY = 'c2ea3dda8b7f673838b93491bd4cf505';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst getTrending = async () => {\n  const {\n    data: { results: data },\n  } = await axios.get('/trending/all/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nconst getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nconst getMovieCredits = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n};\n\nconst getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data.results;\n};\nconst getMovie = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport {\n  getTrending,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getMovie,\n};\n"],"names":["id","useParams","useQuery","getMovieCredits","isLoading","error","data","message","map","item","profile_path","width","src","alt","name","character","API_KEY","axios","getTrending","params","api_key","results","getMovieDetails","language","cast","getMovieReviews","page","getMovie","query","include_adult"],"sourceRoot":""}