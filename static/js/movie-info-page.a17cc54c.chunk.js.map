{"version":3,"file":"static/js/movie-info-page.a17cc54c.chunk.js","mappings":"+NACA,EAA0B,kCAA1B,EAAoE,gCAApE,EAAgH,oCAAhH,EAAmN,iC,SCkFnN,EAxEyB,WACvB,IAAMA,GAAOC,EAAAA,EAAAA,MAAPD,GACAE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAmCC,EAAAA,EAAAA,UAAS,mBAAmB,kBAC7DC,EAAAA,EAAAA,IAAgBP,MADVQ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,KAQ1B,GAAID,EAAO,OAAO,mDAA2BA,EAAME,QAAjC,OAClB,IAAKH,EAAW,CACd,IACEI,EAOEF,EAPFE,YACAC,EAMEH,EANFG,MACAC,EAKEJ,EALFI,KACAC,EAIEL,EAJFK,aACAC,EAGEN,EAHFM,WACAC,EAEEP,EAFFO,OACAC,EACER,EADFQ,SAEIC,EAAaN,GAAgBC,EAC7BM,EAAcL,EAAaM,UAAU,EAAG,GACxCC,EAAkBC,KAAKC,MAAMR,GAC7BS,EAAcR,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMb,QAAMc,KAAK,MACzD,OACE,iCACE,mBAAQC,UAAWC,EAAeC,QArBnB,WAAO,IAAD,EACzB3B,GAAiB,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAU8B,aAAV,eAAiBC,OAAQ,MAoB9B,6BAIA,iBAAKJ,UAAWC,EAAhB,UACGlB,IACC,gBACEiB,UAAWC,EACXI,MAAM,QACNC,IAAG,0CAAqCvB,GACxCwB,IAAKjB,KAGT,4BACE,0BACGA,EADH,KACiBC,EADjB,QAGA,wCAAgBE,EAAhB,QACA,sCACA,uBAAIJ,KACJ,oCACA,uBAAIO,WAIR,iBAAKI,UAAWC,EAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMO,GAAE,kBAAarC,EAAb,SAAR,qBAEF,yBACE,SAAC,KAAD,CAAMqC,GAAE,kBAAarC,EAAb,YAAR,8BAIN,SAAC,KAAD,U,0MC3EFsC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAW,mCAAG,sGAGRD,IAAAA,IAAU,oBAAqB,CACvCE,OAAQ,CACNC,QAASJ,KALK,uBAEC5B,EAFD,EAEhBA,KAAQiC,QAFQ,kBAQXjC,GARW,2CAAH,qDAWXH,EAAe,mCAAG,WAAMP,GAAN,yFACCuC,IAAAA,IAAA,iBAAoBvC,GAAM,CAC/CyC,OAAQ,CACNC,QAASJ,EACTM,SAAU,WAJQ,uBACdlC,EADc,EACdA,KADc,kBAOfA,GAPe,2CAAH,sDAUfmC,EAAe,mCAAG,WAAM7C,GAAN,yFACCuC,IAAAA,IAAA,iBAAoBvC,EAApB,YAAkC,CACvDyC,OAAQ,CACNC,QAASJ,EACTM,SAAU,WAJQ,uBACdlC,EADc,EACdA,KADc,kBAOfA,EAAKoC,MAPU,2CAAH,sDAUfC,EAAe,mCAAG,WAAM/C,GAAN,yFACCuC,IAAAA,IAAA,iBAAoBvC,EAApB,YAAkC,CACvDyC,OAAQ,CACNC,QAASJ,EACTM,SAAU,QACVI,KAAM,KALY,uBACdtC,EADc,EACdA,KADc,kBAQfA,EAAKiC,SARU,2CAAH,sDAUfM,EAAQ,mCAAG,WAAMC,GAAN,yFACQX,IAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNC,QAASJ,EACTM,SAAU,QACVI,KAAM,EACNG,eAAe,EACfD,MAAAA,KAPW,uBACPxC,EADO,EACPA,KADO,kBAURA,EAAKiC,SAVG,2CAAH","sources":["webpack://react-homework-template/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx","services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetailsPage_wrapper__3wAUt\",\"image\":\"MovieDetailsPage_image__bfvR6\",\"container\":\"MovieDetailsPage_container__VyXai\",\"disabledLink\":\"MovieDetailsPage_disabledLink__H3hHt\",\"button\":\"MovieDetailsPage_button__IlAfH\"};","import { useQuery } from 'react-query';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { getMovieDetails } from '../../services/movie-api';\nimport styles from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  let { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const { isLoading, error, data } = useQuery('getMovieDetails', () =>\n    getMovieDetails(id)\n  );\n\n  const handleGoBack = () => {\n    navigate(location?.state?.from || '/');\n  };\n\n  if (error) return <h2>An error has occurred {error.message} </h2>;\n  if (!isLoading) {\n    const {\n      poster_path,\n      title,\n      name,\n      release_date,\n      popularity,\n      genres,\n      overview,\n    } = data;\n    const movieTitle = title ? title : name;\n    const releaseDate = release_date.substring(0, 4);\n    const moviePopularity = Math.round(popularity);\n    const movieGenres = genres.map(genre => genre.name).join(', ');\n    return (\n      <>\n        <button className={styles.button} onClick={handleGoBack}>\n          &#8592; Go back\n        </button>\n\n        <div className={styles.wrapper}>\n          {poster_path && (\n            <img\n              className={styles.image}\n              width=\"200px\"\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={movieTitle}\n            />\n          )}\n          <div>\n            <h2>\n              {movieTitle} ({releaseDate})\n            </h2>\n            <p>User score: {moviePopularity}%</p>\n            <h3>Overwiew</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{movieGenres}</p>\n          </div>\n        </div>\n\n        <div className={styles.container}>\n          <h4>Additional information</h4>\n          <ul>\n            <li>\n              <Link to={`/movies/${id}/cast`}>Cast</Link>\n            </li>\n            <li>\n              <Link to={`/movies/${id}/reviews`}>Reviews</Link>\n            </li>\n          </ul>\n        </div>\n        <Outlet />\n      </>\n    );\n  }\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'c2ea3dda8b7f673838b93491bd4cf505';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst getTrending = async () => {\n  const {\n    data: { results: data },\n  } = await axios.get('/trending/all/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nconst getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nconst getMovieCredits = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n};\n\nconst getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return data.results;\n};\nconst getMovie = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport {\n  getTrending,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getMovie,\n};\n"],"names":["id","useParams","location","useLocation","navigate","useNavigate","useQuery","getMovieDetails","isLoading","error","data","message","poster_path","title","name","release_date","popularity","genres","overview","movieTitle","releaseDate","substring","moviePopularity","Math","round","movieGenres","map","genre","join","className","styles","onClick","state","from","width","src","alt","to","API_KEY","axios","getTrending","params","api_key","results","language","getMovieCredits","cast","getMovieReviews","page","getMovie","query","include_adult"],"sourceRoot":""}